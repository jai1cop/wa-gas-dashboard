name: Scrape WA GBB Data

on:
  schedule:
    - cron: '0 */2 * * 1-5'
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  scrape:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        pip install playwright pandas beautifulsoup4 requests lxml
        playwright install chromium
    
    - name: Ensure directories exist
      run: |
        mkdir -p data
        mkdir -p scripts
        ls -la
    
    - name: Check if scraper exists
      run: |
        if [ -f "scripts/github_scraper.py" ]; then
          echo "✅ Scraper file found"
          ls -la scripts/
        else
          echo "❌ Scraper file not found - creating basic version"
          echo "print('Scraper placeholder created')" > scripts/github_scraper.py
        fi
    
    - name: Run scraper
      run: |
        echo "📂 Current directory contents:"
        ls -la
        echo "📂 Scripts directory:"
        ls -la scripts/ || echo "Scripts directory not found"
        
        if [ -f "scripts/github_scraper.py" ]; then
          echo "🚀 Running scraper..."
          python scripts/github_scraper.py
        else
          echo "❌ No scraper file found"
          exit 1
        fi
        
        echo "📊 Data directory after scraping:"
        ls -la data/ || echo "No data directory"
    
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        echo "Current git status:"
        git status
        
        echo "Adding data directory..."
        git add data/ scripts/
        
        echo "Checking for changes..."
        if git diff --staged --quiet; then
          echo "✅ No changes to commit - data is up to date"
        else
          echo "📝 Changes detected, committing..."
          git diff --staged --name-only
          git commit -m "Update WA GBB data - $(date '+%Y-%m-%d %H:%M:%S')"
          git push
          echo "✅ Changes pushed successfully"
        fi
